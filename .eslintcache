[{"/Users/peter0512lee/Development/Trunk/monosparta/gohiking-web/src/index.js":"1","/Users/peter0512lee/Development/Trunk/monosparta/gohiking-web/src/App.js":"2","/Users/peter0512lee/Development/Trunk/monosparta/gohiking-web/src/config/index.js":"3","/Users/peter0512lee/Development/Trunk/monosparta/gohiking-web/src/config/config.js":"4","/Users/peter0512lee/Development/Trunk/monosparta/gohiking-web/src/config/themes.js":"5","/Users/peter0512lee/Development/Trunk/monosparta/gohiking-web/src/config/menuItems.js":"6","/Users/peter0512lee/Development/Trunk/monosparta/gohiking-web/src/config/routes.js":"7","/Users/peter0512lee/Development/Trunk/monosparta/gohiking-web/src/pages/PageNotFound/PageNotFound.js":"8","/Users/peter0512lee/Development/Trunk/monosparta/gohiking-web/src/pages/LandingPage/LandingPage.js":"9","/Users/peter0512lee/Development/Trunk/monosparta/gohiking-web/src/config/locales/index.js":"10","/Users/peter0512lee/Development/Trunk/monosparta/gohiking-web/src/pages/SignUp/SignUp.js":"11","/Users/peter0512lee/Development/Trunk/monosparta/gohiking-web/src/pages/DialogDemo/DialogDemo.js":"12","/Users/peter0512lee/Development/Trunk/monosparta/gohiking-web/src/pages/PasswordReset/PasswordReset.js":"13","/Users/peter0512lee/Development/Trunk/monosparta/gohiking-web/src/pages/SignIn/SignIn.js":"14","/Users/peter0512lee/Development/Trunk/monosparta/gohiking-web/src/pages/Home/Home.js":"15","/Users/peter0512lee/Development/Trunk/monosparta/gohiking-web/src/pages/ToastDemo/ToastDemo.js":"16","/Users/peter0512lee/Development/Trunk/monosparta/gohiking-web/src/pages/MyAccount/MyAccount.js":"17","/Users/peter0512lee/Development/Trunk/monosparta/gohiking-web/src/config/locales/de.js":"18","/Users/peter0512lee/Development/Trunk/monosparta/gohiking-web/src/config/locales/ru.js":"19","/Users/peter0512lee/Development/Trunk/monosparta/gohiking-web/src/config/locales/en.js":"20","/Users/peter0512lee/Development/Trunk/monosparta/gohiking-web/src/pages/About/index.js":"21","/Users/peter0512lee/Development/Trunk/monosparta/gohiking-web/src/pages/TabsDemo/index.js":"22","/Users/peter0512lee/Development/Trunk/monosparta/gohiking-web/src/pages/ListPageDemo/index.js":"23","/Users/peter0512lee/Development/Trunk/monosparta/gohiking-web/src/pages/FilterDemo/index.js":"24"},{"size":135,"mtime":1612420103552,"results":"25","hashOfConfig":"26"},{"size":342,"mtime":1612420103549,"results":"27","hashOfConfig":"26"},{"size":38,"mtime":1612420103549,"results":"28","hashOfConfig":"26"},{"size":837,"mtime":1612420103549,"results":"29","hashOfConfig":"26"},{"size":541,"mtime":1612420103551,"results":"30","hashOfConfig":"26"},{"size":5603,"mtime":1612420103551,"results":"31","hashOfConfig":"26"},{"size":1849,"mtime":1612420103551,"results":"32","hashOfConfig":"26"},{"size":1495,"mtime":1612420103558,"results":"33","hashOfConfig":"26"},{"size":501,"mtime":1612420103555,"results":"34","hashOfConfig":"26"},{"size":458,"mtime":1612420103550,"results":"35","hashOfConfig":"26"},{"size":5209,"mtime":1612421322366,"results":"36","hashOfConfig":"26"},{"size":1763,"mtime":1612420103552,"results":"37","hashOfConfig":"26"},{"size":3069,"mtime":1612420103558,"results":"38","hashOfConfig":"26"},{"size":4258,"mtime":1612420103558,"results":"39","hashOfConfig":"26"},{"size":525,"mtime":1612420103555,"results":"40","hashOfConfig":"26"},{"size":778,"mtime":1612420103559,"results":"41","hashOfConfig":"26"},{"size":5245,"mtime":1612420103557,"results":"42","hashOfConfig":"26"},{"size":1654,"mtime":1612420103550,"results":"43","hashOfConfig":"26"},{"size":2381,"mtime":1612420103551,"results":"44","hashOfConfig":"26"},{"size":1538,"mtime":1612420103550,"results":"45","hashOfConfig":"26"},{"size":1073,"mtime":1612420103552,"results":"46","hashOfConfig":"26"},{"size":1091,"mtime":1612420103559,"results":"47","hashOfConfig":"26"},{"size":2256,"mtime":1612420103557,"results":"48","hashOfConfig":"26"},{"size":4762,"mtime":1612420103554,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"15ffam2",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"52"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"52"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"/Users/peter0512lee/Development/Trunk/monosparta/gohiking-web/src/index.js",[],["101","102"],"/Users/peter0512lee/Development/Trunk/monosparta/gohiking-web/src/App.js",[],"/Users/peter0512lee/Development/Trunk/monosparta/gohiking-web/src/config/index.js",[],"/Users/peter0512lee/Development/Trunk/monosparta/gohiking-web/src/config/config.js",[],"/Users/peter0512lee/Development/Trunk/monosparta/gohiking-web/src/config/themes.js",[],"/Users/peter0512lee/Development/Trunk/monosparta/gohiking-web/src/config/menuItems.js",[],"/Users/peter0512lee/Development/Trunk/monosparta/gohiking-web/src/config/routes.js",[],"/Users/peter0512lee/Development/Trunk/monosparta/gohiking-web/src/pages/PageNotFound/PageNotFound.js",[],"/Users/peter0512lee/Development/Trunk/monosparta/gohiking-web/src/pages/LandingPage/LandingPage.js",[],"/Users/peter0512lee/Development/Trunk/monosparta/gohiking-web/src/config/locales/index.js",[],"/Users/peter0512lee/Development/Trunk/monosparta/gohiking-web/src/pages/SignUp/SignUp.js",[],"/Users/peter0512lee/Development/Trunk/monosparta/gohiking-web/src/pages/DialogDemo/DialogDemo.js",[],"/Users/peter0512lee/Development/Trunk/monosparta/gohiking-web/src/pages/PasswordReset/PasswordReset.js",[],"/Users/peter0512lee/Development/Trunk/monosparta/gohiking-web/src/pages/SignIn/SignIn.js",[],"/Users/peter0512lee/Development/Trunk/monosparta/gohiking-web/src/pages/Home/Home.js",[],"/Users/peter0512lee/Development/Trunk/monosparta/gohiking-web/src/pages/ToastDemo/ToastDemo.js",[],"/Users/peter0512lee/Development/Trunk/monosparta/gohiking-web/src/pages/MyAccount/MyAccount.js",["103"],"import Avatar from '@material-ui/core/Avatar'\nimport Camera from '@material-ui/icons/CameraAlt'\nimport Delete from '@material-ui/icons/Delete'\nimport Fab from '@material-ui/core/Fab'\nimport InputBase from '@material-ui/core/InputBase'\nimport Page from 'material-ui-shell/lib/containers/Page/Page'\nimport Paper from '@material-ui/core/Paper'\nimport PersonIcon from '@material-ui/icons/Person'\nimport React, { useState } from 'react'\nimport Save from '@material-ui/icons/Save'\nimport Typography from '@material-ui/core/Typography'\nimport Zoom from '@material-ui/core/Zoom'\nimport { useAuth } from 'base-shell/lib/providers/Auth'\nimport { useIntl } from 'react-intl'\nimport { useQuestions } from 'material-ui-shell/lib/providers/Dialogs/Question'\nimport ImgageUploadDialog from 'material-ui-shell/lib/containers/ImageUploadDialog'\n\nconst MyAccount = () => {\n  const intl = useIntl()\n  const { openDialog } = useQuestions()\n\n  const { auth, updateAuth, setAuth } = useAuth()\n  const {\n    photoURL: currentPhoroURL = '',\n    displayName: currentDisplayName = '',\n    email = '',\n  } = auth || {}\n  const [displayName, setDisplayName] = useState(currentDisplayName)\n  const [photoURL, setPhotoURL] = useState(currentPhoroURL)\n  const [isImageDialogOpen, setImageDialogOpen] = useState(false)\n\n  const hasChange =\n    displayName !== currentDisplayName || photoURL !== currentPhoroURL\n\n  const handleImageChange = (image) => {\n    setPhotoURL(image)\n  }\n\n  const handleSave = async () => {\n    updateAuth({ ...auth, displayName, photoURL })\n  }\n\n  const openDeleteDialog = () => {\n    openDialog({\n      title: intl.formatMessage({\n        id: 'delete_account_dialog_title',\n        defaultMessage: 'Delete Account?',\n      }),\n      message: intl.formatMessage({\n        id: 'delete_account_dialog_message',\n        defaultMessage:\n          'This Account and all related data to it will be deleted permanently. Do you want to proceed with the deletion?',\n      }),\n      action: intl.formatMessage({\n        id: 'delete_account_dialog_action',\n        defaultMessage: 'DELETE ACCOUNT',\n      }),\n      handleAction: handleDelete,\n    })\n  }\n\n  const handleDelete = async (handleClose) => {\n    setAuth({ isAuthenticated: false })\n    handleClose()\n  }\n\n  return (\n    <Page\n      pageTitle={intl.formatMessage({\n        id: 'my_account',\n        defaultMessage: 'My Account',\n      })}\n    >\n      <div\n        style={{\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          height: '100%',\n        }}\n      >\n        <Paper\n          elevation={3}\n          style={{\n            position: 'relative',\n            borderRadius: 18,\n            display: 'flex',\n            justifyContent: 'flex-start',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n          <Fab\n            size=\"medium\"\n            style={{ position: 'absolute', bottom: 40, right: -16 }}\n            onClick={openDeleteDialog}\n            color=\"secondary\"\n            aria-label=\"delete\"\n          >\n            <Delete />\n          </Fab>\n\n          <Fab\n            onClick={() => setImageDialogOpen(true)}\n            style={{\n              position: 'absolute',\n              zIndex: 99,\n              top: 50,\n              marginRight: -60,\n            }}\n            color=\"primary\"\n            aria-label=\"save\"\n            size=\"small\"\n          >\n            <Camera />\n          </Fab>\n\n          {photoURL && (\n            <Avatar\n              style={{ width: 120, height: 120, marginTop: -40 }}\n              alt=\"User Picture\"\n              src={photoURL}\n            />\n          )}\n          {!photoURL && (\n            <Avatar style={{ width: 120, height: 120, marginTop: -40 }}\n              alt=\"User Picture\">\n              {displayName ? (\n                displayName[0].toUpperCase()\n              ) : (\n                  <PersonIcon />\n                )}\n            </Avatar>\n          )}\n          <div\n            style={{\n              display: 'flex',\n              alignItems: 'center',\n              flexDirection: 'column',\n              marginTop: 18,\n              marginBottom: 18,\n            }}\n          >\n            <InputBase\n              value={displayName}\n              onChange={(e) => setDisplayName(e.target.value)}\n              inputProps={{\n                'aria-label': 'naked',\n                style: {\n                  fontSize: 26,\n                  fontWeight: 'bold',\n                  textAlign: 'center',\n                },\n              }}\n            />\n            <Typography variant=\"h6\">{email}</Typography>\n          </div>\n\n          <Zoom in={hasChange}>\n            <Fab\n              onClick={handleSave}\n              style={{ marginBottom: -20 }}\n              color=\"primary\"\n              aria-label=\"save\"\n            >\n              <Save />\n            </Fab>\n          </Zoom>\n        </Paper>\n        {\n          <ImgageUploadDialog\n            isOpen={isImageDialogOpen}\n            isOpen={isImageDialogOpen}\n            handleClose={() => setImageDialogOpen(false)}\n            handleCropSubmit={handleImageChange}\n          />\n        }\n\n      </div>\n    </Page>\n  )\n}\n\nexport default MyAccount\n","/Users/peter0512lee/Development/Trunk/monosparta/gohiking-web/src/config/locales/de.js",[],"/Users/peter0512lee/Development/Trunk/monosparta/gohiking-web/src/config/locales/ru.js",[],"/Users/peter0512lee/Development/Trunk/monosparta/gohiking-web/src/config/locales/en.js",[],"/Users/peter0512lee/Development/Trunk/monosparta/gohiking-web/src/pages/About/index.js",[],"/Users/peter0512lee/Development/Trunk/monosparta/gohiking-web/src/pages/TabsDemo/index.js",[],"/Users/peter0512lee/Development/Trunk/monosparta/gohiking-web/src/pages/ListPageDemo/index.js",["104","105"],"import React from 'react'\nimport { ListPage } from 'material-ui-shell/lib/containers/Page'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Typography from '@material-ui/core/Typography'\nimport Divider from '@material-ui/core/Divider'\nimport { useIntl } from 'react-intl'\n\nimport list from './data.json'\nimport { IconButton } from '@material-ui/core'\nimport { Add } from '@material-ui/icons'\n\nconst fields = [\n  {\n    name: 'name',\n    label: 'Name',\n  },\n  {\n    name: 'email',\n    label: 'E-Mail',\n  },\n  {\n    name: 'amount',\n    label: 'Amount',\n    type: 'number',\n  },\n  {\n    name: 'isActive',\n    label: 'Active',\n    type: 'bool',\n  },\n  {\n    name: 'registered',\n    label: 'Registered',\n    type: 'date',\n  },\n  {\n    name: 'registrationTime',\n    label: 'Registration time',\n    type: 'time',\n  },\n]\n\nconst Row = ({ index, style, data }) => {\n  const { name, amount = '', registered, email } = data\n\n  return (\n    <div key={`${name}_${index}`} style={style}>\n      <ListItem alignItems=\"flex-start\">\n        <ListItemText\n          primary={`${name} ${index}`}\n          secondary={\n            <React.Fragment>\n              <Typography\n                component=\"span\"\n                variant=\"body2\"\n                color=\"textSecondary\"\n              >\n                {email}\n              </Typography>\n              <br />\n              <Typography\n                component=\"span\"\n                variant=\"body2\"\n                color=\"textSecondary\"\n              >\n                {`${amount} ${registered}`}\n              </Typography>\n            </React.Fragment>\n          }\n        />\n      </ListItem>\n      <Divider />\n    </div>\n  )\n}\n\nconst ListPageDemo = () => {\n  const intl = useIntl()\n\n  return (\n    <ListPage\n      name=\"list_demo\"\n      list={list}\n      fields={fields}\n      Row={Row}\n      listProps={{ itemSize: 91 }}\n      getPageProps={(list) => {\n        return {\n          pageTitle: intl.formatMessage(\n            {\n              id: 'list_page_demo',\n              defaultMessage: 'List Page demo with {count} rows',\n            },\n            { count: list.length }\n          ),\n        }\n      }}\n    />\n  )\n}\nexport default ListPageDemo\n","/Users/peter0512lee/Development/Trunk/monosparta/gohiking-web/src/pages/FilterDemo/index.js",[],{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","severity":1,"message":"111","line":173,"column":13,"nodeType":"112","endLine":173,"endColumn":39},{"ruleId":"113","severity":1,"message":"114","line":10,"column":10,"nodeType":"115","messageId":"116","endLine":10,"endColumn":20},{"ruleId":"113","severity":1,"message":"117","line":11,"column":10,"nodeType":"115","messageId":"116","endLine":11,"endColumn":13},"no-native-reassign",["118"],"no-negated-in-lhs",["119"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-unused-vars","'IconButton' is defined but never used.","Identifier","unusedVar","'Add' is defined but never used.","no-global-assign","no-unsafe-negation"]